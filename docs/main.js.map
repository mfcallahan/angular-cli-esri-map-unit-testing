{"version":3,"sources":["./src/app/services/map.service.ts","./src/app/services/esriLoaderWrapper.service.ts","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/enums/widgetPosition.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/environments/environment.base.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/enums/basemapId.ts","./src/app/services/environment.service.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuD;;;;AAQvD,qHAAqH;AACrH,2GAA2G;AAC3G;IAWE,oBAAqB,wBAAkD,EAAW,WAA+B;QAA5F,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAW,gBAAW,GAAX,WAAW,CAAoB;IAAG,CAAC;IAErH,yGAAyG;IACzG,2CAA2C;IAC9B,mCAAc,GAA3B,UACE,OAAe,EACf,SAAiB,EACjB,SAAiB,EACjB,SAAiB,EACjB,aAA0B;;;;;;wBAE1B,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;wBAClC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;wBAClC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;wBAEN,qBAAM,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;;wBAApG,iEAAiB,SAAmF,OAAnG,GAAG,UAAE,OAAO;wBAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAW,GAAG,EAAE,EAAE,OAAO,WAAE,CAAC,CAAC;wBAEjF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAe,OAAO,EAAE;4BAC9E,GAAG,EAAE,IAAI,CAAC,GAAG;4BACb,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;4BAC9B,IAAI,EAAE,SAAS;4BACf,SAAS,EAAE,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,aAAa;4BACvC,EAAE,EAAE;gCACF,UAAU,EAAE,CAAC,aAAa,CAAC;6BAC5B;yBACF,CAAC,CAAC;;;;;KACJ;IAED,2DAA2D;IAC9C,qCAAgB,GAA7B,UACE,eAA0B,EAC1B,qBAAqC,EACrC,YAA4B;;;;;;4BAEE,qBAAM,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC;4BAC5E,4BAA4B;4BAC5B,mBAAmB;yBACpB,CAAC;;wBAHI,iEAAwB,SAG5B,OAHK,aAAa,UAAE,IAAI;wBAKpB,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAqB,aAAa,EAAE;4BAC1F,IAAI,EAAE,IAAI,CAAC,OAAO;4BAClB,WAAW,EAAE,eAAe,CAAC,QAAQ,EAAE;yBACxC,CAAC,CAAC;wBAEG,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAY,IAAI,EAAE;4BACtE,IAAI,EAAE,IAAI,CAAC,OAAO;yBACnB,CAAC,CAAC;wBAEH,UAAI,CAAC,OAAO,0CAAE,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,qBAAqB,CAAC,QAAQ,EAAE,EAAE;wBAC/D,UAAI,CAAC,OAAO,0CAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,QAAQ,EAAE,EAAE;;;;;KACrD;IAEM,oCAAe,GAAtB,UAAuB,mBAA4B;;QACjD,UAAI,CAAC,GAAG,0CAAE,SAAS,GAAG;QAEtB,IAAI,mBAAmB,EAAE;YACvB,UAAI,CAAC,OAAO,0CAAE,IAAI,CAAC;gBACjB,MAAM,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC;gBACtD,IAAI,EAAE,IAAI,CAAC,WAAW;aACvB,EAAE;SACJ;IACH,CAAC;IAEY,mCAAc,GAA3B,UAA4B,SAA2B;;;;;;;wBACrD,UAAI,CAAC,GAAG,0CAAE,SAAS,GAAG;wBAEU,qBAAM,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC;gCAC9E,cAAc;gCACd,0BAA0B;6BAC3B,CAAC;;wBAHI,iEAA0B,SAG9B,OAHK,OAAO,UAAE,YAAY;wBAKtB,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,CAAC;4BACtC,OAAO,IAAI,OAAO,CAAC;gCACjB,UAAU,EAAE;oCACV,QAAQ,EAAE,CAAC,GAAG,CAAC;oCACf,QAAQ,EAAE,KAAK,CAAC,QAAQ;iCACzB;gCACD,QAAQ,EAAE;oCACR,IAAI,EAAE,OAAO;oCACb,SAAS,EAAE,KAAK,CAAC,GAAG;oCACpB,QAAQ,EAAE,KAAK,CAAC,GAAG;iCACpB;6BACF,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;wBAEG,iBAAiB,GAAG,IAAI,YAAY,CAAC;4BACzC,MAAM,EAAE,QAAQ;4BAChB,aAAa,EAAE,UAAU;4BACzB,QAAQ,EAAE;gCACR,IAAI,EAAE,QAAQ;gCACd,MAAM,EAAE;oCACN,IAAI,EAAE,eAAe;oCACrB,KAAK,EAAE,SAAS;oCAChB,IAAI,EAAE,MAAM;oCACZ,OAAO,EAAE;wCACP,KAAK,EAAE,SAAS;wCAChB,KAAK,EAAE,GAAG;qCACX;iCACF;6BACF;4BACD,aAAa,EAAE;gCACb,KAAK,EAAE,YAAY;gCACnB,OAAO,EAAE;oCACP;wCACE,IAAI,EAAE,QAAQ;wCACd,UAAU,EAAE;4CACV;gDACE,SAAS,EAAE,UAAU;gDACrB,KAAK,EAAE,UAAU;gDACjB,OAAO,EAAE,IAAI;6CACd;4CACD;gDACE,SAAS,EAAE,UAAU;gDACrB,KAAK,EAAE,UAAU;gDACjB,OAAO,EAAE,IAAI;6CACd;4CACD;gDACE,SAAS,EAAE,WAAW;gDACtB,KAAK,EAAE,WAAW;gDAClB,OAAO,EAAE,IAAI;6CACd;yCACF;qCACF;iCACF;6BACF;yBACF,CAAC,CAAC;wBAEH,UAAI,CAAC,GAAG,0CAAE,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE;wBAExC,qBAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC;;wBAAzC,SAAyC,CAAC;;;;;KAC3C;IAEY,gCAAW,GAAxB,UAAyB,KAAwB;;;;;;;oCAC/C,IAAI,CAAC,OAAO;;;;uCAAE,IAAI;wBAAC,qBAAM,KAAK,CAAC,WAAW,EAAE;;2CAAzB,SAAyB;;;wBAA5C,GAA8C;;;;;KAC/C;wEAhJU,UAAU;iGAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;qBAXpB;CA8JC;AAjJsB;6FAAV,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;ACZ0C;AACQ;;;AAGnD,wGAAwG;AACxG,qCAAqC;AACrC;IAIE,kCAA6B,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAG,CAAC;IACzD,0CAAO,GAAd,UAAe,GAAW,EAAE,MAAc;QACxC,2DAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvB,CAAC;IAEY,8CAAW,GAAxB,UAAyB,OAAiB;;;;4BACjC,qBAAM,+DAAW,CAAC,OAAO,EAAE;4BAChC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM;yBAC7D,CAAC;4BAFF,sBAAO,SAEL,EAAC;;;;KACJ;IAED,0GAA0G;IAC1G,uFAAuF;IACvF,0EAA0E;IACnE,8CAAW,GAAlB,UAAsB,IAA8B,EAAE,QAAc;QAClE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;oGAjBU,wBAAwB;+GAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;mCAPpB;CA2BC;AAlBoC;6FAAxB,wBAAwB;cAHpC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAiD;AAE1C,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,WAAW;IACX,eAAe,EAAE,gFAAgF;CAClG,CAAC;;;;;;;;;;;;;ACNF;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;;;;AAK9D;IAIE,oBAAqB,WAA+B,EAAW,UAAsB;QAAhE,gBAAW,GAAX,WAAW,CAAoB;QAAW,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAElF,yCAAoB,GAA3B,UAA4B,SAAiB;QAC3C,IAAM,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEvE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE,MAAM,UAAE,CAAiC,CAAC;IAC3G,CAAC;wEAPU,UAAU;iGAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;qBAPpB;CAiBC;AARsB;6FAAV,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA,IAAY,cAUX;AAVD,WAAY,cAAc;IACxB,kDAAgC;IAChC,4CAA0B;IAC1B,8CAA4B;IAC5B,oDAAkC;IAClC,4CAA0B;IAC1B,sCAAoB;IACpB,wCAAsB;IACtB,8CAA4B;IAC5B,mCAAiB;AACnB,CAAC,EAVW,cAAc,KAAd,cAAc,QAUzB;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAIlD;IAME,sBAAqB,WAA+B,EAAW,wBAAkD;QAA5F,gBAAW,GAAX,WAAW,CAAoB;QAAW,6BAAwB,GAAxB,wBAAwB,CAA0B;IAAG,CAAC;IAErH,+BAAQ,GAAR;QACE,0GAA0G;QAC1G,mGAAmG;QACnG,+DAA+D;QAC/D,IAAI,CAAC,wBAAwB,CAAC,OAAO,CACnC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM,EACvD,wBAAwB,CACzB,CAAC;IACJ,CAAC;4EAXU,YAAY;gGAAZ,YAAY;YCTzB,yEACE;YAAA,wEAAyB;YACzB,wEAA0B;YAC5B,4DAAM;;uBDHN;CAqBC;AAZwB;6FAAZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AACqB;AACvB;AACL;AAEJ;AACI;AACK;AACI;;AAE5D;IAAA;KAMyB;4FAAZ,SAAS,cAFR,2DAAY;gJAEb,SAAS,mBAHT,EAAE,YADJ,CAAC,uEAAa,EAAE,4FAAuB,EAAE,qEAAgB,EAAE,qEAAgB,EAAE,+DAAc,CAAC;oBAbvG;CAiByB;AAAH;mIAAT,SAAS,mBALL,2DAAY,EAAE,+DAAY,EAAE,wEAAe,aAChD,uEAAa,EAAE,4FAAuB,EAAE,qEAAgB,EAAE,qEAAgB,EAAE,+DAAc;6FAIzF,SAAS;cANrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,EAAE,+DAAY,EAAE,wEAAe,CAAC;gBAC3D,OAAO,EAAE,CAAC,uEAAa,EAAE,4FAAuB,EAAE,qEAAgB,EAAE,qEAAgB,EAAE,+DAAc,CAAC;gBACrG,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;;;;;;AChB+E;AAClB;AACV;;;;AAGpD;IAcE,sBAAqB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAN3C,qDAAqD;QACrD,qBAAgB,GAAG,KAAK,CAAC;QACzB,qBAAgB,GAAG,CAAC,KAAK,CAAC;QAC1B,gBAAW,GAAG,CAAC,CAAC;QAChB,mBAAc,GAAG,SAAS,CAAC;IAEmB,CAAC;IAEzC,sCAAe,GAArB;;;;4BACE,qBAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAClC,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,aAAa,CACnB;;wBAND,SAMC,CAAC;wBAEF,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,iEAAS,CAAC,MAAM,EAAE,2EAAc,CAAC,OAAO,EAAE,2EAAc,CAAC,QAAQ,CAAC,CAAC;;;;;KACrG;4EArBU,YAAY;gGAAZ,YAAY;;;;;;YCVzB,uEAAoC;;uBDApC;CAgCC;AAtBwB;6FAAZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;uHAGC,aAAa;kBADZ,uDAAS;mBAAC,SAAS,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;;;;;;;;;;;;;AEXzC;AAAA;AAAA,IAAM,aAAa,GAAG,MAAM,CAAC;AAEtB,IAAM,WAAW,GAAG;IACzB,mBAAmB,EAAE;QACnB,MAAM,EAAE,2BAAyB,aAAa,MAAG;QACjD,MAAM,EAAE,2BAAyB,aAAa,uBAAoB;KACnE;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACPwC;;;;;;;;;;ICGtC,4EAAmG;;IAAtF,wEAAe;;ADEhC;IASE,yBAAqB,UAAsB,EAAW,UAAsB;QAAvD,eAAU,GAAV,UAAU,CAAY;QAAW,eAAU,GAAV,UAAU,CAAY;QAH5E,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;IAE4D,CAAC;IAEzE,uCAAa,GAApB;QAAA,iBAaC;QAZC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAM,eAAe,GAAG,GAAG,CAAC;QAE5B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAO,QAA0B;;;4BAC/F,qBAAM,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC;;wBAA9C,SAA8C,CAAC;wBAC/C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;;;aACxB,CAAC,CAAC;IACL,CAAC;IAEY,wCAAc,GAA3B;;;;4BACE,qBAAM,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC;;wBAA3C,SAA2C,CAAC;wBAC5C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;;;;KACzB;kFAxBU,eAAe;mGAAf,eAAe;YCV5B,iFACE;YAAA,0EAAwC;YAAA,6EAAkB;YAAA,4DAAO;YACjE,yEACE;YAAA,2HAAmG;YACnG,uEAAgG;YAAnD,kIAAS,mBAAe,IAAC;YAA0B,oEAAS;YAAA,4DAAI;YAC7G,uEACG;YAD0C,kIAAS,oBAAgB,IAAC;YACpE,qEAAU;YAAA,4DACZ;YACH,4DAAM;YACR,4DAAc;;YANwD,0DAAiB;YAAjB,iFAAiB;YACZ,0DAAwB;YAAxB,qFAAwB;YACvB,0DAAuC;YAAvC,wGAAuC;;0BDLnH;CAmCC;AAzB2B;6FAAf,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA,IAAY,SAkBX;AAlBD,WAAY,SAAS;IACnB,0BAAa;IACb,gCAAmB;IACnB,oCAAuB;IACvB,8BAAiB;IACjB,mCAAsB;IACtB,0BAAa;IACb,uDAA0C;IAC1C,8BAAiB;IACjB,wBAAW;IACX,gCAAmB;IACnB,gDAAmC;IACnC,uCAA0B;IAC1B,6CAAgC;IAChC,wDAA2C;IAC3C,kEAAqD;IACrD,uCAA0B;IAC1B,0DAA6C;AAC/C,CAAC,EAlBW,SAAS,KAAT,SAAS,QAkBpB;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAA2C;AACgB;;AAG3D;IAAA;KAeC;IAXC,sBAAI,0CAAU;aAAd;YACE,OAAO,wEAAW,CAAC,UAAU,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAI,2CAAW;aAAf;YACE,OAAO,wEAAW,CAAC,WAAW,CAAC;QACjC,CAAC;;;OAAA;IAED,sBAAI,+CAAe;aAAnB;YACE,OAAO,wEAAW,CAAC,eAAe,CAAC;QACrC,CAAC;;;OAAA;wFAXU,kBAAkB;yGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6BALpB;CAmBC;AAZ8B;6FAAlB,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACc;AACF;AACJ;AACM;AACiB;;AAE9E;IAAA;KAK8B;iGAAjB,cAAc;0JAAd,cAAc,kBAHhB,CAAC,4DAAY,CAAC,EACb,0EAAgB,EAAE,wEAAe,EAAE,oEAAa,EAAE,0EAAgB,EAAE,2FAAwB;yBAXxG;CAa8B;AAAH;mIAAd,cAAc,cAHf,4DAAY,aACZ,0EAAgB,EAAE,wEAAe,EAAE,oEAAa,EAAE,0EAAgB,EAAE,2FAAwB;6FAE3F,cAAc;cAL1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,4DAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,0EAAgB,EAAE,wEAAe,EAAE,oEAAa,EAAE,0EAAgB,EAAE,2FAAwB,CAAC;aACxG;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBACN,CAAC,0DAAU;KAC1B,KAAK,CAAC,UAAC,GAAG,IAAK,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;ACZtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { ElementRef, Injectable } from '@angular/core';\nimport { EsriLoaderWrapperService } from 'src/app/services/esriLoaderWrapper.service';\nimport { EnvironmentService } from './environment.service';\nimport { IMapPoint } from 'src/app/interfaces/iMapPoint';\nimport { WidgetPosition } from 'src/app/enums/widgetPosition';\nimport { BasemapId } from 'src/app/enums/basemapId';\nimport esri = __esri; // Esri types\n\n// This class encapsulates the Esri MapView and methods to manipulate the map. It is a singleton service, provided in\n// the application root so that it can be injected into any component which needs to access the ArcGIS map.\n@Injectable({\n  providedIn: 'root',\n})\nexport class MapService {\n  defaultCenterLat?: number;\n  defaultCenterLon?: number;\n  defaultZoom?: number;\n  defaultBaseMap?: string;\n  map?: esri.Map;\n  mapView?: esri.MapView;\n\n  constructor(readonly esriLoaderWrapperService: EsriLoaderWrapperService, readonly environment: EnvironmentService) {}\n\n  // Initialize a default Map object for the app, which is rendered with a MapView that is bound to the DOM\n  // element inside parameter 'mapElementRef'\n  public async initDefaultMap(\n    basemap: string,\n    centerLon: number,\n    centerLat: number,\n    zoomLevel: number,\n    mapElementRef?: ElementRef\n  ): Promise<void> {\n    this.defaultCenterLat = centerLat;\n    this.defaultCenterLon = centerLon;\n    this.defaultZoom = zoomLevel;\n\n    const [Map, MapView] = await this.esriLoaderWrapperService.loadModules(['esri/Map', 'esri/views/MapView']);\n\n    this.map = this.esriLoaderWrapperService.getInstance<esri.Map>(Map, { basemap });\n\n    this.mapView = this.esriLoaderWrapperService.getInstance<esri.MapView>(MapView, {\n      map: this.map,\n      center: [centerLon, centerLat],\n      zoom: zoomLevel,\n      container: mapElementRef?.nativeElement,\n      ui: {\n        components: ['attribution'],\n      },\n    });\n  }\n\n  // Creates instances of widgets and add them to the MapView\n  public async addAllMapWidgets(\n    basemapToggleId: BasemapId,\n    basemapTogglePosition: WidgetPosition,\n    zoomPosition: WidgetPosition\n  ): Promise<void> {\n    const [BasemapToggle, Zoom] = await this.esriLoaderWrapperService.loadModules([\n      'esri/widgets/BasemapToggle',\n      'esri/widgets/Zoom',\n    ]);\n\n    const toggle = this.esriLoaderWrapperService.getInstance<esri.BasemapToggle>(BasemapToggle, {\n      view: this.mapView,\n      nextBasemap: basemapToggleId.toString(),\n    });\n\n    const zoom = this.esriLoaderWrapperService.getInstance<esri.Zoom>(Zoom, {\n      view: this.mapView,\n    });\n\n    this.mapView?.ui.add(toggle, basemapTogglePosition.toString());\n    this.mapView?.ui.add(zoom, zoomPosition.toString());\n  }\n\n  public removeAllPoints(zoomToDefaultExtent: boolean): void {\n    this.map?.removeAll();\n\n    if (zoomToDefaultExtent) {\n      this.mapView?.goTo({\n        center: [this.defaultCenterLon, this.defaultCenterLat],\n        zoom: this.defaultZoom,\n      });\n    }\n  }\n\n  public async addPointsToMap(mapPoints: Array<IMapPoint>): Promise<void> {\n    this.map?.removeAll();\n\n    const [Graphic, FeatureLayer] = await this.esriLoaderWrapperService.loadModules([\n      'esri/Graphic',\n      'esri/layers/FeatureLayer',\n    ]);\n\n    const graphics = mapPoints.map((point, i) => {\n      return new Graphic({\n        attributes: {\n          ObjectId: i + 1,\n          location: point.location,\n        },\n        geometry: {\n          type: 'point',\n          longitude: point.lon,\n          latitude: point.lat,\n        },\n      });\n    });\n\n    const randomPointsLayer = new FeatureLayer({\n      source: graphics,\n      objectIdField: 'OBJECTID',\n      renderer: {\n        type: 'simple',\n        symbol: {\n          type: 'simple-marker',\n          color: '#ffff00',\n          size: '12px',\n          outline: {\n            color: '#0d0d0d',\n            width: 1.5,\n          },\n        },\n      },\n      popupTemplate: {\n        title: 'Map points',\n        content: [\n          {\n            type: 'fields',\n            fieldInfos: [\n              {\n                fieldName: 'location',\n                label: 'Location',\n                visible: true,\n              },\n              {\n                fieldName: 'latitude',\n                label: 'Latitude',\n                visible: true,\n              },\n              {\n                fieldName: 'longitude',\n                label: 'longitude',\n                visible: true,\n              },\n            ],\n          },\n        ],\n      },\n    });\n\n    this.map?.layers.add(randomPointsLayer);\n\n    await this.zoomToLayer(randomPointsLayer);\n  }\n\n  public async zoomToLayer(layer: esri.FeatureLayer): Promise<void> {\n    this.mapView?.goTo(await layer.queryExtent());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { loadCss, loadModules } from 'esri-loader';\nimport { EnvironmentService } from './environment.service';\n\n// This class acts as a wrapper for methods available in the esri-loader npm package so that they can be\n// more easily mocked during testing.\n@Injectable({\n  providedIn: 'root',\n})\nexport class EsriLoaderWrapperService {\n  constructor(private readonly environment: EnvironmentService) {}\n  public loadCss(url: string, before: string): void {\n    loadCss(url, before);\n  }\n\n  public async loadModules(modules: string[]): Promise<any[]> {\n    return await loadModules(modules, {\n      url: this.environment.baseConfigs.arcgisJsApiSettings.apiUrl,\n    });\n  }\n\n  // This generic method accepts a constructor as a parameter and and optional object parameter, and returns\n  // an instance of Type <T>. See this link for more information about the mixin pattern:\n  // https://devblogs.microsoft.com/typescript/announcing-typescript-2-2-rc/\n  public getInstance<T>(type: new (paramObj: any) => T, paramObj?: any): T {\n    return new type(paramObj);\n  }\n}\n","import { baseConfigs } from './environment.base';\n\nexport const environment = {\n  production: false,\n  baseConfigs,\n  randomPtsPhxUrl: 'https://mfcallahan-homepage-dev.azurewebsites.net/api/MockData/RandomPointsPhx',\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { EnvironmentService } from './environment.service';\nimport { IMapPoint } from '../interfaces/iMapPoint';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(readonly environment: EnvironmentService, readonly httpClient: HttpClient) {}\n\n  public getRandomPointsInPhx(numPoints: number): Observable<Array<IMapPoint>> {\n    const params = new HttpParams().set('numPoints', numPoints.toString());\n\n    return this.httpClient.get(this.environment.randomPtsPhxUrl, { params }) as Observable<Array<IMapPoint>>;\n  }\n}\n","export enum WidgetPosition {\n  bottomLeading = 'bottom-leading',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  bottomTrailing = 'bottom-trailing',\n  topLeading = 'top-leading',\n  topLeft = 'top-left',\n  topRight = 'top-right',\n  topTrailing = 'top-trailing',\n  manual = 'manual',\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EnvironmentService } from 'src/app/services/environment.service';\nimport { EsriLoaderWrapperService } from 'src/app/services/esriLoaderWrapper.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(readonly environment: EnvironmentService, readonly esriLoaderWrapperService: EsriLoaderWrapperService) {}\n\n  ngOnInit(): void {\n    // Load the ArcGIS JS API styles on app init, inserting the stylesheet link above the first <style> tag on\n    // the page so that ArcGIS styles can be overridden, if needed. See this link for more information:\n    // https://github.com/Esri/esri-loader#overriding-arcgis-styles\n    this.esriLoaderWrapperService.loadCss(\n      this.environment.baseConfigs.arcgisJsApiSettings.cssUrl,\n      'link[rel=\"stylesheet\"]'\n    );\n  }\n}\n","<div class=\"appContent\" fxLayout=\"column\">\n  <app-header></app-header>\n  <app-map fxFlex></app-map>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [AppComponent, MapComponent, HeaderComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, FlexLayoutModule, MaterialModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { WidgetPosition } from 'src/app/enums/widgetPosition';\nimport { BasemapId } from 'src/app/enums/basemapId';\nimport { MapService } from 'src/app/services/map.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements AfterViewInit {\n  @ViewChild('mapView', { static: false })\n  mapElementRef?: ElementRef;\n  // Set default map center and zoom to continental USA\n  defaultCenterLat = 39.83;\n  defaultCenterLon = -98.58;\n  defaultZoom = 5;\n  defaultBaseMap = 'streets';\n\n  constructor(readonly mapService: MapService) {}\n\n  async ngAfterViewInit(): Promise<void> {\n    await this.mapService.initDefaultMap(\n      this.defaultBaseMap,\n      this.defaultCenterLon,\n      this.defaultCenterLat,\n      this.defaultZoom,\n      this.mapElementRef\n    );\n\n    this.mapService.addAllMapWidgets(BasemapId.hybrid, WidgetPosition.topLeft, WidgetPosition.topRight);\n  }\n}\n","<div class=\"mapView\" #mapView></div>\n","const arcgisVersion = '4.17';\n\nexport const baseConfigs = {\n  arcgisJsApiSettings: {\n    apiUrl: `https://js.arcgis.com/${arcgisVersion}/`,\n    cssUrl: `https://js.arcgis.com/${arcgisVersion}/esri/css/main.css`,\n  },\n};\n","import { Component } from '@angular/core';\nimport { IMapPoint } from 'src/app/interfaces/iMapPoint';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MapService } from 'src/app/services/map.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  showSpinner = false;\n  dataLoaded = false;\n\n  constructor(readonly apiService: ApiService, readonly mapService: MapService) {}\n\n  public loadDataClick(): void {\n    this.showSpinner = true;\n    const numPointsToLoad = 100;\n\n    if (this.dataLoaded) {\n      this.mapService.removeAllPoints(false);\n    }\n\n    this.apiService.getRandomPointsInPhx(numPointsToLoad).subscribe(async (response: Array<IMapPoint>) => {\n      await this.mapService.addPointsToMap(response);\n      this.showSpinner = false;\n      this.dataLoaded = true;\n    });\n  }\n\n  public async clearDataClick(): Promise<void> {\n    await this.mapService.removeAllPoints(true);\n    this.dataLoaded = false;\n  }\n}\n","<mat-toolbar color=\"primary\" fxLayout=\"row\">\n  <span fxFlex fxLayoutAlign=\"start none\">Angular CLI & Esri</span>\n  <div fxFlex fxLayoutAlign=\"end none\" fxLayoutGap=\"20px\">\n    <mat-spinner [diameter]=\"35\" color=\"accent\" mode=\"indeterminate\" *ngIf=\"showSpinner\"></mat-spinner>\n    <a href=\"#\" mat-raised-button color=\"accent\" (click)=\"loadDataClick()\" [disabled]=\"showSpinner\">Load Data</a>\n    <a href=\"#\" mat-raised-button color=\"accent\" (click)=\"clearDataClick()\" [disabled]=\"!dataLoaded || showSpinner\"\n      >Clear Data</a\n    >\n  </div>\n</mat-toolbar>\n","export enum BasemapId {\n  topo = 'topo',\n  streets = 'streets',\n  satellite = 'satellite',\n  hybrid = 'hybrid',\n  darkGray = 'dark-gray',\n  gray = 'gray',\n  nationalGeographic = 'national-geographic',\n  oceans = 'oceans',\n  osm = 'osm',\n  terrain = 'terrain',\n  darkGrayVector = 'dark-gray-vector',\n  grayVector = 'gray-vector',\n  streetsVector = 'streets-vector',\n  streetsNightVector = 'streets-night-vector',\n  streetsNavigationVector = 'streets-navigation-vector',\n  topoVector = 'topo-vector',\n  streetsReliefVector = 'streets-relief-vector',\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IEnvironment } from 'src/app/interfaces/iEnvironment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnvironmentService implements IEnvironment {\n  get production(): boolean {\n    return environment.production;\n  }\n\n  get baseConfigs(): any {\n    return environment.baseConfigs;\n  }\n\n  get randomPtsPhxUrl(): string {\n    return environment.randomPtsPhxUrl;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule],\n  exports: [MatToolbarModule, MatButtonModule, MatIconModule, MatDividerModule, MatProgressSpinnerModule],\n})\nexport class MaterialModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}